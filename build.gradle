plugins {
    id 'java'
    id "io.qameta.allure" version "2.10.0"
}

group 'com.aero.test'
version '1.0'


compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(18)
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    maven {
        url "https://jitpack.io"
    }
}

// dependency versions
def selenideVersion = "6.7.4"
def allureVersion = "2.19.0"
def testngVersion = "7.6.1"
def logVersion = "2.18.0"


dependencies {
    testImplementation "com.codeborne:selenide:$selenideVersion"
    testImplementation "io.qameta.allure:allure-selenide:$allureVersion"
    testImplementation "io.qameta.allure:allure-java-commons:$allureVersion"
    testImplementation "io.qameta.allure:allure-testng:$allureVersion"
    testImplementation "org.testng:testng:$testngVersion"
    testImplementation 'org.aspectj:aspectjweaver:1.9.9.1'
    testImplementation 'io.appium:java-client:8.2.0'
    testImplementation "org.apache.logging.log4j:log4j-slf4j-impl:$logVersion"
    testImplementation 'org.apache.commons:commons-lang3:3.12.0'
    testImplementation 'com.google.code.gson:gson:2.9.1'
}

allure {
    version = allureVersion
    adapter {
        frameworks {
            testng
        }
    }
}

def suiteProperty = System.getProperty("suite", "base")
def suite = "src/test/resources/suites/${suiteProperty}.xml"
test {
    systemProperties = System.properties
    useTestNG {
        suites suite
    }
}

tasks.named('wrapper') {
    distributionUrl = "https://services.gradle.org/distributions/gradle-7.5-bin.zip"
}
